---

- name: Nextcloud | Determine if release already downloaded
  stat: path=/home/{{ ansible_user }}/nextcloud.latest.tar.bz2 checksum_algorithm=sha256 get_checksum=yes
  changed_when: false
  register: nc_release

- name: Nextcloud | Download latest signature
  get_url:
    url: https://download.nextcloud.com/server/releases/latest.tar.bz2.sha256
    dest: /home/{{ ansible_user }}/nextcloud.latest.tar.bz2.sha256
    mode: 0644
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    force: yes
  changed_when: false

- name: Nextcloud | Gather local signature
  shell: cat /home/{{ ansible_user }}/nextcloud.latest.tar.bz2.sha256 | awk '{print $1}'
  when: nc_release.stat.exists == True
  register: nc_signature
  changed_when: false

- name: Nextcloud | Compare signatures
  shell: "[ '{{ nc_release.stat.checksum }}' == '{{ nc_signature.stdout }}' ]"
  register: nc_hash
  changed_when: false
  when: nc_release.stat.exists == True

- name: Nextcloud | Download latest release
  get_url:
    url: https://download.nextcloud.com/server/releases/latest.tar.bz2
    dest: /home/{{ ansible_user }}/nextcloud.latest.tar.bz2
    mode: 0644
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    force: yes
  when: nc_release.stat.exists != True or nc_hash.rc != 0

- name: Nextcloud | Untar release
  become: yes
  unarchive:
    remote_src: yes
    src: /home/{{ ansible_user }}/nextcloud.latest.tar.bz2
    dest: /usr/share/nginx/html/
    owner: nginx
    group: nginx
    mode: 0775
    creates: /usr/share/nginx/html/nextcloud

- name: Nextcloud | Add 404 page
  become: yes
  copy:
    src: ../files/nextcloud/404.html
    dest: /usr/share/nginx/html/nextcloud/404.html
    owner: nginx
    group: nginx
    mode: 0644

- name: Nextcloud | Add 50x page
  become: yes
  copy:
    src: ../files/nextcloud/50x.html
    dest: /usr/share/nginx/html/nextcloud/50x.html
    owner: nginx
    group: nginx
    mode: 0644

- name: Nextcloud | Install NextCloud
  become: yes
  become_user: nginx
  shell: php occ maintenance:install --database "mysql" --database-name "{{ db_name }}" --database-user "{{ db_user }}" --database-pass "{{ db_user_pass }}" --data-dir "{{ data_directory }}" --admin-user "{{ nextcloud_user }}" --admin-pass "{{ nextcloud_pass }}" && touch nextcloud-installed
  args:
    chdir: /usr/share/nginx/html/nextcloud
    creates: nextcloud-installed

- name: Nextcloud | Upgrade Nextcloud
  become: yes
  become_user: nginx
  shell: php occ upgrade --no-interaction && touch nextcloud-upgraded
  args:
    chdir: /usr/share/nginx/html/nextcloud
    creates: nextcloud-upgraded

- name: Nextcloud | Determine latest version
  become: yes
  become_user: nginx
  shell: php occ -V | awk 'FNR == 3 { print $3 }'
  args:
    chdir: /usr/share/nginx/html/nextcloud
  changed_when: false
  register: version

- debug:
    msg: "Version: {{version.stdout}}"

- name: Nextcloud | Assign latest version
  set_fact:
    nextcloud_version: "{{ version.stdout }}"

- name: Nextcloud | Copy config
  become: yes
  template:
    src: ../files/nextcloud/config.php.j2
    dest: /usr/share/nginx/html/nextcloud/config/config.php
    owner: nginx
    group: nginx
    mode: 0640

# Nextcloud prompts to uprade on the web interface, but fails to upgrade when running this Ansible task. It
# uprades without issue from the web interface. My hunch is that there is something missing in my config template
# that would allow this task to execute successfully. I have not been able to identify the cause, so disabling this
# task and letting the final step be a manual action on the web interface.
#
#- name: Nextcloud | Upgrade Nextcloud again after copying config
#  become: yes
#  become_user: nginx
#  shell: php occ upgrade --no-interaction && touch nextcloud-upgraded-2
#  args:
#    chdir: /usr/share/nginx/html/nextcloud
#    creates: nextcloud-upgraded-2

- name: NextcLoud | SELinux read/write configuration
  become: yes
  sefcontext:
    target: '{{ item }}'
    setype: httpd_sys_rw_content_t
    state: present
  with_items:
    - "{{ data_directory }}"
    - /usr/share/nginx/html/nextcloud/config(/.*)?
    - /usr/share/nginx/html/nextcloud/apps(/.*)?
    - /usr/share/nginx/html/nextcloud/assets(/.*)?
    - /usr/share/nginx/html/nextcloud/.htaccess
    - /usr/share/nginx/html/nextcloud/.user.ini
  when: ansible_distribution == "CentOS"

- name: Nextcloud | Set SELinux contexts
  become: yes
  command: restorecon -Rv '/usr/share/nginx/html/nextcloud/'
  when: ansible_distribution == "CentOS"
  changed_when: false

- name: Nextcloud | Disallow write access
  become: yes
  seboolean:
    name: httpd_unified
    persistent: yes
    state: off
  when: ansible_distribution == "CentOS"

- name: Nextcloud | Allow network access
  become: yes
  seboolean:
    name: httpd_can_network_connect
    persistent: yes
    state: on
  when: ansible_distribution == "CentOS"

- name: Nextcloud | Allow sendmail
  become: yes
  seboolean:
    name: httpd_can_sendmail
    persistent: yes
    state: on
  when: ansible_distribution == "CentOS"
