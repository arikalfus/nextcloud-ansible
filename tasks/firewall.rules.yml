---

- name: Firewall | Install firewall
  become: yes
  apt:
    name: ufw
    state: latest
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Firewall | Enable Services
  become: yes
  firewalld:
    service: "{{ item }}"
    permanent: true
    zone: public
    state: enabled
  when: ansible_distribution == "CentOS" or ansible_distribution == 'Red Hat Enterprise Linux'
  with_items:
    - http
    - https
  register: firewall_reload

- name: Firewall | Enable Services
  become: yes
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.protocol }}"
    state: enabled
  with_items:
    - { rule: "limit", port: 22, protocol: "tcp" }
    - { rule: "allow", port: 80, protocol: "tcp" }
    - { rule: "allow", port: 443, protocol: "tcp" }
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Firewall | Set defaults
  become: yes
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
    state: enabled
  with_items:
    - { direction: "incoming", policy: "deny" }
    - { direction: "outgoing", policy: "allow" }
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Firewall | Set logging
  become: yes
  ufw:
    logging: on
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Firewall | Ensure service is enabled
  become: yes
  systemd:
    name: firewalld
    enabled: yes
    state: started
  when: ansible_distribution == "CentOS" or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Firewall | Reload service
  become: yes
  systemd:
    name: firewalld
    state: restarted
  when: firewall_reload|changed and (ansible_distribution == "CentOS" or ansible_distribution == 'Red Hat Enterprise Linux')
