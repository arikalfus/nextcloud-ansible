---

- name: Nginx | Install Package
  become: yes
  yum: name=nginx state=latest
  when: ansible_distribution == "CentOS"

- name: Nginx | Ensure SSL Directory
  file: path=/etc/nginx/ssl owner=root group=root state=directory

- name: Nginx | Check if Pre-Computed DH Params
  become: no
  # Note that this relative path is from the project root, where `make run` should be called from.
  # local_action runs from the process CWD.
  local_action: stat path="files/secrets/nginx/dhparam.pem"
  register: dh_params

- name: Nginx | Ensure DH Params
  become: yes
  copy: src=../files/secrets/nginx/dhparam.pem dest=/etc/nginx/ssl/dhparam.pem owner=root group=root mode=0644
  when: dh_params.stat.exists
  register: dh_exists

- name: Nginx | Remove Default Site
  file: path=/etc/nginx/conf.d/default.conf state=absent
  notify: Nginx Reload

- name: Nginx | Remove the provided example_ssl.conf file
  file: path=/etc/nginx/conf.d/example_ssl.conf state=absent
  notify: Nginx Reload

- name: Nginx | Copy Nginx Configuration
  become: yes
  template: src=../files/nginx/nginx.conf.j2 dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  notify: Nginx Reload

- name: Nginx | Install Certbot Packages
  become: yes
  command: yum-config-manager --enable {{ item }}
  with_items:
    - rhui-REGION-rhel-server-extras 
    - rhui-REGION-rhel-server-optional
  when: ansible_distribution == "CentOS"
  changed_when: false

- name: Nginx | Install Certbot
  become: yes
  yum: name=certbot-nginx state=latest
  when: ansible_distribution == "CentOS"
  register: certbot

- name: Nginx | Install Certificate
  become: yes
  command: certbot --nginx --email "{{ email }}" --agree-tos --domains {{ server_domain }} --non-interactive
  # Add an additional check once a certificate has been successfully installed - check for cert's existence in a previous command
  when: server_domain != "_"
  notify: Nginx Reload

- name: Nginx | Start Service
  become: yes
  service: name=nginx enabled=yes state=started

- name: Nginx | Ensure cron directory
  file: path=/opt/cron state=directory

- name: Nginx | Copy Certificate Renewal Script
  copy: src=../files/nginx/cert_renewal.sh dest=/opt/cron/cert_renewal.sh owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }} mode=0755
  when: server_domain != "_"

- name: Nginx | Schedule Certificate Renewal Cron
  become: yes
  lineinfile: dest=/etc/cron.d/cert_renewal line='43 8,20 * * * root bash /opt/cron/cert_renewal.sh' state=present create=yes
  when: server_domain != "_"
